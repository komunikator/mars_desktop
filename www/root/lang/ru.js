lang = {
    VERSION: 'версия 1.0.0',
    user: 'Пользователь',
    unknown_user: 'Неизвестное имя пользователя',
    invalid_password: 'Неправильный пароль',
    mainTitle: 'MARS',
    menu: 'Меню',
    scripts: 'Сценарии',
    //tasks: 'Мероприятия',
    tasks: 'Задачи',
    task_: 'задачи',
    media: 'Медиа',
    rule: 'Правило',
    cronFormat: 'Формат crontab',
    sipConnection: 'SIP подключение',
    onlyDay: 'Число',
    everyWeekday: 'Каждый день недели',
    everyDay: 'Каждый день',
    active: 'Активный',
    active_calls: 'Активные вызовы',
    intercept_call: 'Перехватить звонок',
    end_call: "Положить трубку",
    settings: 'Настройки',
    upgrade: 'Обновления',
    logout: 'Выход',
    date: 'Дата',
    from: 'c',
    to: 'по',
    range: 'Диапазон',
    step: 'Шаг',
    rating: 'Оценка',
    session: 'ID сессии',
    type: 'Тип',
    msisdn: 'Номер абонента',
    status: 'Статус',
    start: 'Запуск',
    invite: 'Вызов',
    ringing: 'Дозвон',
    answered: 'Отвечен',
    cancelled: 'Отменен',
    callFailed: 'Ошибка',
    ended: 'Завершен',
    incoming: 'входящий',
    outgoing: 'исходящий',
    script: 'Сценарий',
    rtp_local: 'Локальный RDP',
    rtp_remote: 'Удаленный RDP',
    reason: 'Причина',
    play: 'Воспроизвести',
    stopPlay: 'Завершить воспроизведение',
    next: 'Далее',
    recOn: 'Начать запись',
    recOff: 'Завершить запись',
    wait: 'Подождать',
    time: 'Время',
    goto: 'Перейти',
    mark: 'Метка',
    refer: 'Перевод звонка',
    dtmfOn: 'Oбработка нажатия клавиш',
    dtmfData: 'Записать значение',
    keys: 'Комбинация',
    default: 'По умолчанию',
    hangUp: 'Завершить звонок',
    browse: 'Обзор',
    abort: 'Прервать',
    remove_selected: 'Удалить выбранные',
    remove_all: 'Очистить все',
    filename: 'Имя файла',
    size: 'Размер',
    progress: '%',
    selection_message: 'Выбран {0} файл(ов), {1}',
    upload_message: 'Загружено  {0}% ({1} из {2} )',
    upload: 'Загрузить',
    load: 'Загрузка',
    cancel: 'Отмена',
    close: 'Закрыть',
    OK: 'OK',
    must_wav_file_type: 'формат звукового файла должен быть Wav',
    add: 'Добавить',
    copy: 'Скопировать',
    refresh: 'Обновить',
    connect: 'Подключить',
    remove: 'Удалить',
    edit: 'Изменить',
    create: 'Создать',
    fileExist: 'Файл с таким именем уже существует',
    directoryExist: 'Каталог с таким именем уже существует',
    pathExist: 'Файл или каталог с таким именем уже существует',
    pathNotExist: 'Файл или каталог с таким именем не существует',
    ENOENT: 'Ошибка записи файла',
    ENOTEMPTY: 'Каталог не пустой',
    EBUSY: 'Недоступен',
    ready: 'Готово',
    uploading: 'Загрузка',
    uploaded: 'Загружено',
    uploaderror: 'Ошибка загрузки',
    createForder: 'Создание нового каталога в',
    enterFolderName: 'Введите название каталога',
    removePath: 'Удалить',
    removing: 'Удаление',
    rename: 'Переименовать',
    renamePath: 'Переименование',
    enterNewName: 'Введите новое имя',
    error: 'Ошибка',
    info: 'Информация',
    editor: 'Редактор',
    save: 'Сохранить',
    dataSaved: 'Данные сохранены',
    createNew: 'Создание {0}',
    enterName: 'Введите название {0}',
    script_: 'сценария',
    reports: 'Отчеты',
    export: 'Экспорт',
    import: 'Импорт',
    allParamsExists: 'Все доступные параметры уже добавлены!',
    cronInfo: "Примеры использования\n" +
            "0 22 * * 1-5 каждый рабочий день в 22:00\n" +
            "23 */2 * * * в 0:23, 2:23, 4:23 и т. д.\n" +
            "5 4 * * sun в 4:05 в воскресенье\n" +
            "0 0 1 1 * С новым годом!\n" +
            "15 10,13 * * 1,4 в понедельник и четверг в 10:15 и 13:15\n" +
            "0-59 * * * * ежеминутно\n" +
            "0-59/2 * * * * по четным минутам\n" +
            "1-59/2 * * * * по нечетным минутам\n" +
            "*/5 * * * * каждые 5 минут\n" +
            "0 1 1-7 * * каждое первое воскресенье каждого месяца в 1:00",
    cronText:
            "<pre> Формат записи                             \n" +
            "* * * * * \n" +
            "┬ ┬ ┬ ┬ ┬\n" +
            "│ │ │ │ │\n" +
            "│ │ │ │ │\n" +
            "│ │ │ │ └ День недели [0-6] (воскр=0)\n" +
            "│ │ │ └───── Месяц [1-12]\n" +
            "│ │ └────────── День [1-31]\n" +
            "│ └─────────────── Час [0-23]\n" +
            "└──────────────────── Минута [0-59]</pre>",
    element: "Элемент",
    type : "Тип",
            start: "Запуск",
            byEvent: "По событию",
    scheduled: "По расписанию",
    event: "Событие",
    events: "События",
    regEvents: "Зарегистрированные события",
    schedule: "Расписание",
    incomingCall_info: "incomingCall - событие, возникающее при входящем звонке на текущий номер сервиса",
    collection: "Коллекции",
    record: "Запись",
    duration: "Длительность",
    target: "Абоненты",
    targets: "Абоненты",
    targetList_: "списка абонентов",
    referesh_s: "с",
    referesh_m: "м",
    refresh_manually: 'Обновлять вручную',
    refresh_every_s: "Каждые {0} секунд",
    refresh_every_m: "Каждую(е) {0} минуту(ы)",
    registerStatus: "SIP подключения",
    webSocketStatus: "Соединение с сервером",
    connectedWebSocket: "Соединение установлено",
    disabledWebSocket: "Соединение разорвано",
    service_contact: "Сервисный номер",
    serverTime: "Серверное время",
    idgroup: "ID Группы",
    duration: "Длительность",
    operator_contact: "Номер оператора",
    disabled: "отключен",
    registered: "зарегистрирован",
    unregistered: "ошибка регистрации",
    showPg: 'Показывать',
    perPage: 'записей на странице',
    justifycenterTitle: 'Автоформатирование',
    justifycenterText: 'Применить автоформатирование для выделенного текста',
    insertorderedlistTitle: 'Нумерация строк',
    insertorderedlistText: 'Показывать номера строк',
    name: 'Наименование',
    insertText: 'Вставить',
    command: 'Команды',
    params: 'Параметры',
    total_records: 'всего записей',
    stt: 'Распознавание речи',
    tts: 'Электродиктор',
    findings: 'Данные'
};

if (typeof exports !== 'undefined')
    exports.msg = lang;
else
    Ext.onReady(function () {
        Ext.showError = function (msg) {
            Ext.MessageBox.show({
                title: lang.error,
                msg: msg,
                buttons: Ext.MessageBox.OK,
                animateTarget: 'mb9',
                //fn: showResult,
                icon: Ext.MessageBox.ERROR
            });
        };
        Ext.showInfo = function (msg) {
            Ext.MessageBox.show({
                title: lang.info,
                msg: msg,
                buttons: Ext.MessageBox.OK,
                animateTarget: 'mb9',
                //fn: showResult,
                icon: Ext.MessageBox.INFO
            });
        };
    });